{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-tut\\\\react-apps\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport Netflix from \"./Netflix\";\nimport Amazon from \"./Amazon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"heading_style\",\n    children: \"List of top 5 Netflix Series in 2023\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this), FavSeries === 'amazon' ? /*#__PURE__*/_jsxDEV(Netflix, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 34\n  }, this) : /*#__PURE__*/_jsxDEV(Amazon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 47\n  }, this)]\n}, void 0, true);\n_c = App;\nexport default App;\n\n// Syntax\n// {condition ? trueValue : falseValue}\n\n// condition: The condition determines which value to render.\n\n// '?': The question mark ? is the ternary operator itself. \n// It separates the condition from the true and false expressions.\n\n// trueValue:  It is the value when the condition is true.\n\n// ':': It seprates the True and false expressions.\n\n// falseValue:  It is the value when the condition is false.\n\n// For Example \n\n// import React from 'react';\n\n// const ExampleComponent = () => {\n\n//   const isLoggedIn = true;\n\n//   return (\n\n//     <div>\n//       {isLoggedIn ? (<h1>Welcome, user!</h1>) : (<h1>Please log in to access the content.</h1>)}\n//     </div>\n\n//   );\n// };\n\n// export default ExampleComponent;\n\n// The code explaination:\n\n// => import React from 'react';\n// This line imports the React library, which is necessary for writing React components.\n\n// => const ExampleComponent = () => ();\n// This defines a functional component named ExampleComponent without any prop. \n\n// => export default ExampleComponent;\n// This exports the ExampleComponent so that it can be imported and used in other parts of your application.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Netflix","Amazon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","FavSeries","_c","$RefreshReg$"],"sources":["D:/react-tut/react-apps/src/App.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Netflix from \"./Netflix\";\r\nimport Amazon from \"./Amazon\";\r\n\r\n\r\nconst App = () => (\r\n  <>\r\n  <h1 className=\"heading_style\">List of top 5 Netflix Series in 2023</h1>\r\n    { (FavSeries === 'amazon') ? <Netflix/> : <Amazon/>}\r\n  </> \r\n);\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n// Syntax\r\n// {condition ? trueValue : falseValue}\r\n\r\n// condition: The condition determines which value to render.\r\n\r\n// '?': The question mark ? is the ternary operator itself. \r\n// It separates the condition from the true and false expressions.\r\n\r\n// trueValue:  It is the value when the condition is true.\r\n\r\n// ':': It seprates the True and false expressions.\r\n\r\n// falseValue:  It is the value when the condition is false.\r\n\r\n\r\n// For Example \r\n\r\n// import React from 'react';\r\n\r\n// const ExampleComponent = () => {\r\n\r\n//   const isLoggedIn = true;\r\n\r\n//   return (\r\n\r\n//     <div>\r\n//       {isLoggedIn ? (<h1>Welcome, user!</h1>) : (<h1>Please log in to access the content.</h1>)}\r\n//     </div>\r\n\r\n//   );\r\n// };\r\n\r\n// export default ExampleComponent;\r\n\r\n\r\n// The code explaination:\r\n\r\n// => import React from 'react';\r\n// This line imports the React library, which is necessary for writing React components.\r\n\r\n// => const ExampleComponent = () => ();\r\n// This defines a functional component named ExampleComponent without any prop. \r\n\r\n// => export default ExampleComponent;\r\n// This exports the ExampleComponent so that it can be imported and used in other parts of your application.\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG9B,MAAMC,GAAG,GAAGA,CAAA,kBACVH,OAAA,CAAAE,SAAA;EAAAE,QAAA,gBACAJ,OAAA;IAAIK,SAAS,EAAC,eAAe;IAAAD,QAAA,EAAC;EAAoC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,EAClEC,SAAS,KAAK,QAAQ,gBAAIV,OAAA,CAACH,OAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,gBAAGT,OAAA,CAACF,MAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAAA,eACnD,CACH;AAACE,EAAA,GALIR,GAAG;AAOT,eAAeA,GAAG;;AAMlB;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
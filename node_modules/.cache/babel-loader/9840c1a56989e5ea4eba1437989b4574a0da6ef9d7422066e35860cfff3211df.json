{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-tut\\\\react-apps\\\\src\\\\SlotM.jsx\";\nimport React from 'react';\nimport Matching from './Matching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlotM = props => {\n  let x = props.x;\n  let y = props.y;\n  let z = props.z;\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(Matching, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n_c = SlotM;\nexport default SlotM;\nvar _c;\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"names":["React","Matching","jsxDEV","_jsxDEV","Fragment","_Fragment","SlotM","props","x","y","z","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-tut/react-apps/src/SlotM.jsx"],"sourcesContent":["import React from 'react'\r\nimport Matching from './Matching';\r\n\r\nconst SlotM = (props) => {\r\n  \r\n    let x = props.x;\r\n    let y = props.y;\r\n    let z = props.z;\r\n  \r\n    if (x === y && y === z) {\r\n      return <Matching/>\r\n    } \r\n    else {\r\n      return (\r\n        <>\r\n          \r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default SlotM;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAErB,IAAIC,CAAC,GAAGD,KAAK,CAACC,CAAC;EACf,IAAIC,CAAC,GAAGF,KAAK,CAACE,CAAC;EACf,IAAIC,CAAC,GAAGH,KAAK,CAACG,CAAC;EAEf,IAAIF,CAAC,KAAKC,CAAC,IAAIA,CAAC,KAAKC,CAAC,EAAE;IACtB,oBAAOP,OAAA,CAACF,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACpB,CAAC,MACI;IACH,oBACEX,OAAA,CAAAE,SAAA,mBAEE,CAAC;EAEP;AACF,CAAC;AAACU,EAAA,GAhBET,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
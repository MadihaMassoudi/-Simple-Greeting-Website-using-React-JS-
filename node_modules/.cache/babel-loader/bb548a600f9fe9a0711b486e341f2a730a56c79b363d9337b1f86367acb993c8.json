{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-tut\\\\react-apps\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport Card from \"./Cards\";\nimport Data from \"./Data\";\nimport Netflix from \"./Netflix\";\nimport Amazon from \"./Amazon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavSeries = \"netflix\";\nconst FavS = () => {\n  if (FavSeries === \"amazon\") {\n    return /*#__PURE__*/_jsxDEV(Amazon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Netflix, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c = FavS;\nconst App = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"heading_style\",\n    children: \"List of top 5 Netflix Series in 2023\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(FavS, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c2 = App;\nexport default App;\n\n// Syntax \n\n// Array.map(function(currentValue, index, arr));\n\n// Array =  is our existing array that we want to loop\n// currectValue = current value of our elemnt \n// index (Optional) = The index of our current element \n// arr (Optional) = The array object of our current element\n\nconst oldarr = [\"Madiha\", \"Massoudi\", \"Iman\", \"Massoudi\"];\n// console.log(oldarr[0]);\n// console.log(oldarr[1]);\n// console.log(oldarr[2]);\n// console.log(oldarr[3]);\n\nconst newarr = oldarr.map(function (cvalue) {\n  return cvalue;\n});\nconsole.log(newarr);\nconst studentData = [{\n  id: 1,\n  name: 'Madiha',\n  age: 14\n}, {\n  id: 1,\n  name: 'Iman',\n  age: 12\n}, {\n  id: 1,\n  name: 'Amir',\n  age: 8\n}, {\n  id: 1,\n  name: 'Ayat',\n  age: 4\n}];\nconsole.log(studentData[1].name);\nconst newData = studentData.map(cvalue => {\n  return `My name is ${studentData.name}. I am ${studentData.age} Years old.`;\n});\nconsole.log(newData);\nvar _c, _c2;\n$RefreshReg$(_c, \"FavS\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Card","Data","Netflix","Amazon","jsxDEV","_jsxDEV","Fragment","_Fragment","FavSeries","FavS","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","className","_c2","oldarr","newarr","map","cvalue","console","log","studentData","id","name","age","newData","$RefreshReg$"],"sources":["D:/react-tut/react-apps/src/App.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Card from \"./Cards\";\r\nimport Data from \"./Data\"\r\nimport Netflix from \"./Netflix\";\r\nimport Amazon from \"./Amazon\";\r\n\r\nconst FavSeries = \"netflix\";\r\n\r\nconst FavS = () =>{\r\n    if(FavSeries === \"amazon\"){\r\n      return <Amazon />\r\n    }else{\r\n        return <Netflix />\r\n    }\r\n}\r\n\r\nconst App = () => (\r\n  <>\r\n  <h1 className=\"heading_style\">List of top 5 Netflix Series in 2023</h1>\r\n    <FavS />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n\r\n\r\n// Syntax \r\n\r\n// Array.map(function(currentValue, index, arr));\r\n\r\n// Array =  is our existing array that we want to loop\r\n// currectValue = current value of our elemnt \r\n// index (Optional) = The index of our current element \r\n// arr (Optional) = The array object of our current element\r\n\r\nconst oldarr = [\"Madiha\", \"Massoudi\", \"Iman\", \"Massoudi\"];\r\n// console.log(oldarr[0]);\r\n// console.log(oldarr[1]);\r\n// console.log(oldarr[2]);\r\n// console.log(oldarr[3]);\r\n\r\nconst newarr = oldarr.map(function (cvalue){\r\n   return cvalue\r\n});\r\n\r\nconsole.log(newarr)\r\n\r\n\r\nconst studentData = [\r\n    {id: 1, name: 'Madiha', age: 14},\r\n    {id: 1, name: 'Iman', age: 12},\r\n    {id: 1, name: 'Amir', age: 8},\r\n    {id: 1, name: 'Ayat', age: 4}\r\n]\r\n\r\nconsole.log(studentData[1].name);\r\n\r\nconst newData = studentData.map((cvalue) => {\r\n    return `My name is ${studentData.name}. I am ${studentData.age} Years old.`\r\n});\r\n\r\nconsole.log(newData);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,SAAS,GAAG,SAAS;AAE3B,MAAMC,IAAI,GAAGA,CAAA,KAAK;EACd,IAAGD,SAAS,KAAK,QAAQ,EAAC;IACxB,oBAAOH,OAAA,CAACF,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB,CAAC,MAAI;IACD,oBAAOR,OAAA,CAACH,OAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;AACJ,CAAC;AAAAC,EAAA,GANKL,IAAI;AAQV,MAAMM,GAAG,GAAGA,CAAA,kBACVV,OAAA,CAAAE,SAAA;EAAAS,QAAA,gBACAX,OAAA;IAAIY,SAAS,EAAC,eAAe;IAAAD,QAAA,EAAC;EAAoC;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACrER,OAAA,CAACI,IAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA,eACR,CACH;AAACK,GAAA,GALIH,GAAG;AAOT,eAAeA,GAAG;;AAGlB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMI,MAAM,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC;AACzD;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAG,CAAC,UAAUC,MAAM,EAAC;EACxC,OAAOA,MAAM;AAChB,CAAC,CAAC;AAEFC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;AAGnB,MAAMK,WAAW,GAAG,CAChB;EAACC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAE,CAAC,EAChC;EAACF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAE,CAAC,EAC9B;EAACF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAC,CAAC,EAC7B;EAACF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAC,CAAC,CAChC;AAEDL,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC;AAEhC,MAAME,OAAO,GAAGJ,WAAW,CAACJ,GAAG,CAAEC,MAAM,IAAK;EACxC,OAAQ,cAAaG,WAAW,CAACE,IAAK,UAASF,WAAW,CAACG,GAAI,aAAY;AAC/E,CAAC,CAAC;AAEFL,OAAO,CAACC,GAAG,CAACK,OAAO,CAAC;AAAC,IAAAf,EAAA,EAAAI,GAAA;AAAAY,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAZ,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}